
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 3.11.1
 * Query Engine version: 1a2506facaf1a4727b7c26850735e88ec779dee9
 */
Prisma.prismaVersion = {
  client: "3.11.1",
  engine: "1a2506facaf1a4727b7c26850735e88ec779dee9"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = 'DbNull'
Prisma.JsonNull = 'JsonNull'
Prisma.AnyNull = 'AnyNull'

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.Episode_transcripts_03_23_2022_15_40_26ScalarFieldEnum = makeEnum({
  episode: 'episode',
  act0_title: 'act0_title',
  act0_text: 'act0_text',
  act1_title: 'act1_title',
  act1_text: 'act1_text',
  act2_title: 'act2_title',
  act2_text: 'act2_text',
  act3_title: 'act3_title',
  act3_text: 'act3_text',
  act4_title: 'act4_title',
  act4_text: 'act4_text',
  act5_title: 'act5_title',
  act5_text: 'act5_text',
  act6_title: 'act6_title',
  act6_text: 'act6_text',
  act7_title: 'act7_title',
  act7_text: 'act7_text',
  act8_title: 'act8_title',
  act8_text: 'act8_text',
  act9_title: 'act9_title',
  act9_text: 'act9_text',
  act10_title: 'act10_title',
  act10_text: 'act10_text',
  act11_title: 'act11_title',
  act11_text: 'act11_text',
  act12_title: 'act12_title',
  act12_text: 'act12_text',
  act13_title: 'act13_title',
  act13_text: 'act13_text',
  act14_title: 'act14_title',
  act14_text: 'act14_text',
  act15_title: 'act15_title',
  act15_text: 'act15_text',
  act16_title: 'act16_title',
  act16_text: 'act16_text',
  act17_title: 'act17_title',
  act17_text: 'act17_text',
  act18_title: 'act18_title',
  act18_text: 'act18_text',
  act19_title: 'act19_title',
  act19_text: 'act19_text',
  act20_title: 'act20_title',
  act20_text: 'act20_text'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.QueryMode = makeEnum({
  default: 'default',
  insensitive: 'insensitive'
});


exports.Prisma.ModelName = makeEnum({
  episode_transcripts_03_23_2022_15_40_26: 'episode_transcripts_03_23_2022_15_40_26'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
